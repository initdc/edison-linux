From c744ef492e000b6e2ac8010a08c1d3b9a8698e19 Mon Sep 17 00:00:00 2001
From: Huiquan Zhong <huiquan.zhong@intel.com>
Date: Tue, 30 Jul 2013 15:54:15 +0800
Subject: [PATCH 292/429] intel_mid_dma: Add 2 helper functions temply.

There is requirment from a DMA driver's customer to know how many data
has been actually transferred for one DMA channel, and this patch just
follow some other DMA controller driver to provide 2 APIs for this
purpose:
	intel_dma_get_src_addr()
	intel_dma_get_dst_addr()

It is better to be implemented in DMA driver's tx_status() callback
instead of creating 2 new APIs. But this feature is not implemented yet
in current dma driver.

So we will use these 2 APIs now for quick enabling, and will remove them
once DMA team has fixed the tx_status().

Signed-off-by: Huiquan Zhong <huiquan.zhong@intel.com>
---
 drivers/dma/intel_mid_dma.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/drivers/dma/intel_mid_dma.c b/drivers/dma/intel_mid_dma.c
index 114a4d0dfd36..2a51cf73c317 100644
--- a/drivers/dma/intel_mid_dma.c
+++ b/drivers/dma/intel_mid_dma.c
@@ -260,6 +260,24 @@ static void dmac1_unmask_periphral_intr(struct intel_mid_dma_chan *midc)
 	return;
 }
 
+/*
+ * Some consumer may need to know how many bytes have been
+ * really transfered for one specific dma channel
+ */
+inline dma_addr_t intel_dma_get_src_addr(struct dma_chan *chan)
+{
+	struct intel_mid_dma_chan	*midc = to_intel_mid_dma_chan(chan);
+	return readl(midc->ch_regs + SAR);
+}
+EXPORT_SYMBOL(intel_dma_get_src_addr);
+
+inline dma_addr_t intel_dma_get_dst_addr(struct dma_chan *chan)
+{
+	struct intel_mid_dma_chan	*midc = to_intel_mid_dma_chan(chan);
+	return readl(midc->ch_regs + DAR);
+}
+EXPORT_SYMBOL(intel_dma_get_dst_addr);
+
 /**
  * enable_dma_interrupt -	enable the periphral interrupt
  * @midc: dma channel for which enable interrupt is required
-- 
2.37.3

