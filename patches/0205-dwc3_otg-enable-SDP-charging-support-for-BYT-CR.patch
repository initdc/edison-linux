From 3c817c49b3c4817f180871bd42b35149f89ddafb Mon Sep 17 00:00:00 2001
From: "Wu, Hao" <hao.wu@intel.com>
Date: Mon, 9 Dec 2013 12:58:39 +0800
Subject: [PATCH 205/429] dwc3_otg: enable SDP charging support for BYT CR

Enable the notification for SDP charging related event.

Signed-off-by: Wu, Hao <hao.wu@intel.com>
---
 drivers/usb/dwc3/dwc3-intel-byt.c  | 36 +++++++++++++++++++++++-------
 include/linux/usb/dwc3-intel-mid.h |  3 +++
 2 files changed, 31 insertions(+), 8 deletions(-)

diff --git a/drivers/usb/dwc3/dwc3-intel-byt.c b/drivers/usb/dwc3/dwc3-intel-byt.c
index 96faa73d85c2..adae9ef32367 100644
--- a/drivers/usb/dwc3/dwc3-intel-byt.c
+++ b/drivers/usb/dwc3/dwc3-intel-byt.c
@@ -37,6 +37,18 @@ static int charger_detect_enable(struct dwc_otg2 *otg)
 	return data->charger_detect_enable;
 }
 
+static int sdp_charging(struct dwc_otg2 *otg)
+{
+	struct intel_dwc_otg_pdata *data;
+
+	if (!otg || !otg->otg_data)
+		return 0;
+
+	data = (struct intel_dwc_otg_pdata *)otg->otg_data;
+
+	return data->sdp_charging;
+}
+
 static void usb2phy_eye_optimization(struct dwc_otg2 *otg)
 {
 	struct usb_phy *phy;
@@ -488,8 +500,8 @@ static int dwc3_intel_byt_set_power(struct usb_phy *_otg,
 
 	data = (struct intel_dwc_otg_pdata *)otg->otg_data;
 
-	if (otg->charging_cap.chrg_type ==
-			POWER_SUPPLY_CHARGER_TYPE_USB_CDP)
+	/* Needn't notify charger capability if charger_detection disable */
+	if (!charger_detect_enable(otg) && !sdp_charging(otg))
 		return 0;
 	else if (otg->charging_cap.chrg_type !=
 			POWER_SUPPLY_CHARGER_TYPE_USB_SDP) {
@@ -522,10 +534,14 @@ static int dwc3_intel_byt_set_power(struct usb_phy *_otg,
 		 * Should send 0ma with SUSPEND event
 		 */
 		else
-			cap.ma = 0;
+			cap.ma = 2;
 
-		atomic_notifier_call_chain(&otg->usb2_phy.notifier,
-				USB_EVENT_CHARGER, &cap);
+		if (sdp_charging(otg))
+			atomic_notifier_call_chain(&otg->usb2_phy.notifier,
+					USB_EVENT_ENUMERATED, &cap.ma);
+		else
+			atomic_notifier_call_chain(&otg->usb2_phy.notifier,
+					USB_EVENT_CHARGER, &cap);
 		otg_dbg(otg, "Notify EM	CHARGER_EVENT_SUSPEND\n");
 
 		return 0;
@@ -586,7 +602,7 @@ static int dwc3_intel_byt_notify_charger_type(struct dwc_otg2 *otg,
 	unsigned long flags;
 
 	/* Just return if charger detection is not enabled */
-	if (!charger_detect_enable(otg))
+	if (!charger_detect_enable(otg) && !sdp_charging(otg))
 		return 0;
 
 	if (event > POWER_SUPPLY_CHARGER_EVENT_DISCONNECT) {
@@ -611,8 +627,12 @@ static int dwc3_intel_byt_notify_charger_type(struct dwc_otg2 *otg,
 	cap.chrg_evt = event;
 	spin_unlock_irqrestore(&otg->lock, flags);
 
-	atomic_notifier_call_chain(&otg->usb2_phy.notifier, USB_EVENT_CHARGER,
-			&cap);
+	if (sdp_charging(otg))
+		atomic_notifier_call_chain(&otg->usb2_phy.notifier,
+				USB_EVENT_ENUMERATED, &cap.ma);
+	else
+		atomic_notifier_call_chain(&otg->usb2_phy.notifier,
+				USB_EVENT_CHARGER, &cap);
 
 	return 0;
 }
diff --git a/include/linux/usb/dwc3-intel-mid.h b/include/linux/usb/dwc3-intel-mid.h
index 70c337f3fe72..1b79c12c9744 100644
--- a/include/linux/usb/dwc3-intel-mid.h
+++ b/include/linux/usb/dwc3-intel-mid.h
@@ -31,6 +31,9 @@ struct intel_dwc_otg_pdata {
 	int gpio_id;
 	int id;
 	int charging_compliance;
+	struct delayed_work suspend_discon_work;
+	u8 ti_phy_vs1;
+	int sdp_charging;
 };
 
 #define TUSB1211_VENDOR_ID_LO					0x00
-- 
2.37.3

