From a9d52aa284a9527623bd4b7a5c0d217063a98858 Mon Sep 17 00:00:00 2001
From: Saadi Maalem <saadi.maalem@intel.com>
Date: Mon, 16 Jun 2014 18:15:11 +0200
Subject: [PATCH 341/429] emmc: fix spinlock recursion

spinlock recursion (hard lockup) when tuning_timer() is called just after sdhci_execute_tuning()

The host->tuning_count variable was not initialized correctly in sdhci.c.
This resulted in sdhci_execute_tuning() and tuning_timer() being called continuously.

Initialization of tuning_count makes the error condition not detectable.
The race condition is however probably still possible.

Signed-off-by: Saadi Maalem <saadi.maalem@intel.com>
---
 drivers/mmc/host/sdhci.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
index c419ab248fb4..35a8adc19d14 100644
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -4195,6 +4195,8 @@ int sdhci_add_host(struct sdhci_host *host)
 	/* Initial value for re-tuning timer count */
 	host->tuning_count = (caps[1] & SDHCI_RETUNING_TIMER_COUNT_MASK) >>
 			      SDHCI_RETUNING_TIMER_COUNT_SHIFT;
+	if (host->tuning_count == 0 && host->ops->get_tuning_count)
+		host->tuning_count = host->ops->get_tuning_count(host);
 
 	/*
 	 * In case Re-tuning Timer is not disabled, the actual value of
-- 
2.37.3

