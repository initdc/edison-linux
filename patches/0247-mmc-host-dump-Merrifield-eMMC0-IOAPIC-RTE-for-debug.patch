From ae61c5f9d17b62baeae442da5a4285a8cf54bca2 Mon Sep 17 00:00:00 2001
From: Yunpeng Gao <yunpeng.gao@intel.com>
Date: Wed, 18 Sep 2013 19:16:42 +0800
Subject: [PATCH 247/429] mmc:host: dump Merrifield eMMC0 IOAPIC RTE for debug

Sometimes 'mmc0: Timeout waiting for hardware interrupt' error
messages observed on Merrifield platform but the eMMC0 host
controller register dump showed the controller worked well,
and issue happened on interrupt forwarding path.

This patch will dump Merrifield IOAPIC RTE entry registers
for eMMC0 host controller when issue happened for debug.

Signed-off-by: Yunpeng Gao <yunpeng.gao@intel.com>
---
 drivers/mmc/host/sdhci-pci.c |  3 +++
 drivers/mmc/host/sdhci.c     | 17 +++++++++++++++++
 include/linux/mmc/sdhci.h    |  2 ++
 3 files changed, 22 insertions(+)

diff --git a/drivers/mmc/host/sdhci-pci.c b/drivers/mmc/host/sdhci-pci.c
index 25c0d474e9d1..50934af68104 100644
--- a/drivers/mmc/host/sdhci-pci.c
+++ b/drivers/mmc/host/sdhci-pci.c
@@ -670,6 +670,9 @@ static int intel_mrfl_mmc_probe_slot(struct sdhci_pci_slot *slot)
 	if (PCI_FUNC(slot->chip->pdev->devfn) == INTEL_MRFL_EMMC_0)
 		sdhci_alloc_panic_host(slot->host);
 
+	if (PCI_FUNC(slot->chip->pdev->devfn) == INTEL_MRFL_EMMC_0)
+		mrfl_ioapic_rte_reg_addr_map(slot);
+
 	slot->host->mmc->caps2 |= MMC_CAP2_INIT_CARD_SYNC |
 		MMC_CAP2_POLL_R1B_BUSY;
 
diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
index ef1e787d2f91..f3bc9224cf19 100644
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -2403,6 +2403,20 @@ static void sdhci_tasklet_finish(unsigned long param)
 	sdhci_release_ownership(host->mmc);
 }
 
+static void dump_rte_apic_reg(struct sdhci_host *host, void __iomem *idx_addr)
+{
+	unsigned int rte_lo, rte_hi;
+
+	writeb(0x10 + 2 * host->irq, idx_addr);
+	rte_lo = readl(host->rte_addr + 0x10);
+
+	writeb(0x10 + 2 * host->irq + 1, idx_addr);
+	rte_hi = readl(host->rte_addr + 0x10);
+
+	pr_err("%s: dump APIC RTE reg - L32: 0x%08x, H32: 0x%08x\n",
+		mmc_hostname(host->mmc), rte_lo, rte_hi);
+}
+
 static void sdhci_timeout_timer(unsigned long data)
 {
 	struct sdhci_host *host;
@@ -2417,6 +2431,9 @@ static void sdhci_timeout_timer(unsigned long data)
 			"interrupt.\n", mmc_hostname(host->mmc));
 		sdhci_dumpregs(host);
 
+		if (host->rte_addr)
+			dump_rte_apic_reg(host, host->rte_addr);
+
 		if (host->data) {
 			host->data->error = -ETIMEDOUT;
 			sdhci_finish_data(host);
diff --git a/include/linux/mmc/sdhci.h b/include/linux/mmc/sdhci.h
index d8789c0fe2eb..10db1a845ef7 100644
--- a/include/linux/mmc/sdhci.h
+++ b/include/linux/mmc/sdhci.h
@@ -128,6 +128,8 @@ struct sdhci_host {
 	/* XXX: SCU/X86 mutex variables base address in shared SRAM */
 	void __iomem *sram_addr;        /* Shared SRAM address */
 
+	void __iomem *rte_addr;	/* IOAPIC RTE register address */
+
 #define DEKKER_EMMC_OWNER_OFFSET        0
 #define DEKKER_IA_REQ_OFFSET            0x04
 #define DEKKER_SCU_REQ_OFFSET           0x08
-- 
2.37.3

