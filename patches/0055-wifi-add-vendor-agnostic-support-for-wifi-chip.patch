From 38b0376bb774172d01354417de4a3606752b74c4 Mon Sep 17 00:00:00 2001
From: Jonathan DE CESCO <jonathan.de.cesco@intel.com>
Date: Mon, 3 Jun 2013 18:19:19 +0200
Subject: [PATCH 055/429] wifi: add vendor agnostic support for wifi chip

Vendor agnostic framework for wlan chip vendor scalability
Attach regulator to SDIO slot. Fill it with WLAN enable gpio number
Use ACPI or SFI to get GPIO num
Clean wifi platform data file to remove any vendor specific code
Add BRCM43241 in ACPI scan list

Signed-off-by: Jonathan DE CESCO <jonathan.de.cesco@intel.com>
Signed-off-by: Frode Isaksen <frodex.isaksen@intel.com>
---
 arch/x86/platform/intel-mid/board.c           |   6 +-
 .../platform/intel-mid/device_libs/Makefile   |   2 +-
 .../device_libs/pci/platform_sdhci_pci.c      | 148 +++++++++++-
 .../intel-mid/device_libs/platform_bcm43xx.c  | 215 ------------------
 .../intel-mid/device_libs/platform_bcm43xx.h  |  21 --
 .../intel-mid/device_libs/platform_wifi.c     |  86 +++++++
 .../intel-mid/device_libs/platform_wifi.h     |  20 ++
 drivers/acpi/acpi_platform.c                  |   3 +-
 drivers/mmc/host/sdhci-pci.c                  |   1 +
 drivers/net/wireless/Kconfig                  |  11 +
 10 files changed, 264 insertions(+), 249 deletions(-)
 delete mode 100644 arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.c
 delete mode 100644 arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.h
 create mode 100644 arch/x86/platform/intel-mid/device_libs/platform_wifi.c
 create mode 100644 arch/x86/platform/intel-mid/device_libs/platform_wifi.h

diff --git a/arch/x86/platform/intel-mid/board.c b/arch/x86/platform/intel-mid/board.c
index e8c275b75b78..7d54f60dbad6 100644
--- a/arch/x86/platform/intel-mid/board.c
+++ b/arch/x86/platform/intel-mid/board.c
@@ -77,7 +77,7 @@
 
 /* WIFI devices */
 #include "device_libs/platform_wl12xx.h"
-#include "device_libs/platform_bcm43xx.h"
+#include "device_libs/platform_wifi.h"
 
 static void __init *no_platform_data(void *info)
 {
@@ -87,8 +87,8 @@ static void __init *no_platform_data(void *info)
 struct devs_id __initconst device_ids[] = {
 	/* SD devices */
 	{"wl12xx_clk_vmmc", SFI_DEV_TYPE_SD, 0, &wl12xx_platform_data, NULL},
-	{"bcm43xx_clk_vmmc", SFI_DEV_TYPE_SD, 0, &bcm43xx_platform_data, NULL},
-	{"bcm43xx_vmmc", SFI_DEV_TYPE_SD, 0, &bcm43xx_platform_data, NULL},
+	{"bcm43xx_clk_vmmc", SFI_DEV_TYPE_SD, 0, &wifi_platform_data, NULL},
+	{"bcm43xx_vmmc", SFI_DEV_TYPE_SD, 0, &wifi_platform_data, NULL},
 
 	/* SPI devices */
 	{"bma023", SFI_DEV_TYPE_I2C, 1, &no_platform_data, NULL},
diff --git a/arch/x86/platform/intel-mid/device_libs/Makefile b/arch/x86/platform/intel-mid/device_libs/Makefile
index 4af0a6b2882a..f01f173d9fc1 100644
--- a/arch/x86/platform/intel-mid/device_libs/Makefile
+++ b/arch/x86/platform/intel-mid/device_libs/Makefile
@@ -45,4 +45,4 @@ obj-$(subst m,y,$(CONFIG_DRM_MRFLD)) += platform_panel.o
 # GPS
 obj-$(subst m,y,$(CONFIG_INTEL_MID_GPS)) += platform_gps.o
 # WIFI devices
-obj-$(subst m,y,$(CONFIG_BCM43XX_PLATFORM_DATA)) += platform_bcm43xx.o
+obj-$(subst m,y,$(CONFIG_WIFI_PLATFORM_DATA)) += platform_wifi.o
diff --git a/arch/x86/platform/intel-mid/device_libs/pci/platform_sdhci_pci.c b/arch/x86/platform/intel-mid/device_libs/pci/platform_sdhci_pci.c
index 360d461d179f..c66933d02219 100644
--- a/arch/x86/platform/intel-mid/device_libs/pci/platform_sdhci_pci.c
+++ b/arch/x86/platform/intel-mid/device_libs/pci/platform_sdhci_pci.c
@@ -21,6 +21,10 @@
 #include <linux/intel_mid_pm.h>
 #include <linux/hardirq.h>
 #include <linux/mmc/sdhci.h>
+#include <linux/regulator/machine.h>
+#include <linux/regulator/fixed.h>
+#include <linux/acpi.h>
+#include <linux/acpi_gpio.h>
 
 #include "platform_sdhci_pci.h"
 
@@ -57,12 +61,11 @@ static int panic_mode_emmc0_power_up(void *data)
 }
 #endif
 
-static unsigned int sdhci_pdata_quirks;
+static unsigned int sdhci_pdata_quirks = SDHCI_QUIRK2_ADVERTISE_2V0_FORCE_1V8
+		| SDHCI_QUIRK2_ENABLE_MMC_PM_IGNORE_PM_NOTIFY;
 
 int sdhci_pdata_set_quirks(unsigned int quirks)
 {
-	/*Should not be set more than once*/
-	WARN_ON(sdhci_pdata_quirks);
 	sdhci_pdata_quirks = quirks;
 	return 0;
 }
@@ -73,7 +76,68 @@ static void mrfl_sdio_cleanup(struct sdhci_pci_data *data);
 static void (*sdhci_embedded_control)(void *dev_id, void (*virtual_cd)
 					(void *dev_id, int card_present));
 
-static unsigned int sdhci_pdata_quirks;
+/*****************************************************************************\
+ *                                                                           *
+ *  Regulator declaration for WLAN SDIO card                                 *
+ *                                                                           *
+\*****************************************************************************/
+
+#define DELAY_ONOFF 250
+
+static struct regulator_consumer_supply wlan_vmmc_supply = {
+	.supply		= "vmmc",
+};
+
+static struct regulator_init_data wlan_vmmc_data = {
+	.constraints = {
+		.valid_ops_mask	= REGULATOR_CHANGE_STATUS,
+	},
+	.num_consumer_supplies	= 1,
+	.consumer_supplies = &wlan_vmmc_supply,
+};
+
+static struct fixed_voltage_config vwlan = {
+	.supply_name		= "vwlan",
+	.microvolts		= 1800000,
+	.gpio			= -EINVAL,
+	.startup_delay		= 1000 * DELAY_ONOFF,
+	.enable_high		= 1,
+	.enabled_at_boot	= 0,
+	.init_data		= &wlan_vmmc_data,
+};
+
+static void vwlan_device_release(struct device *dev) {}
+
+static struct platform_device vwlan_device = {
+	.name		= "reg-fixed-voltage",
+	.id		= PLATFORM_DEVID_AUTO,
+	.dev = {
+		.platform_data	= &vwlan,
+		.release = vwlan_device_release,
+	},
+};
+
+
+/* Board specific setup related to SDIO goes here */
+static int mfld_sdio_setup(struct sdhci_pci_data *data)
+{
+	struct pci_dev *pdev = data->pdev;
+	/* Control card power through a regulator */
+	wlan_vmmc_supply.dev_name = dev_name(&pdev->dev);
+	vwlan.gpio = get_gpio_by_name("WLAN-enable");
+	if (vwlan.gpio < 0)
+		pr_err("%s: No WLAN-enable GPIO in SFI table\n",
+	       __func__);
+	pr_info("vwlan gpio %d\n", vwlan.gpio);
+	/* add a regulator to control wlan enable gpio */
+	if (platform_device_register(&vwlan_device))
+		pr_err("regulator register failed\n");
+	else
+		sdhci_pci_request_regulators();
+
+	return 0;
+}
+
 
 /* MFLD platform data */
 static struct sdhci_pci_data mfld_sdhci_pci_data[] = {
@@ -109,11 +173,32 @@ static struct sdhci_pci_data mfld_sdhci_pci_data[] = {
 			.cd_gpio = -EINVAL,
 			.quirks = 0,
 			.platform_quirks = 0,
-			.setup = 0,
+			.setup = mfld_sdio_setup,
 			.cleanup = 0,
 	},
 };
 
+/* Board specific setup related to SDIO goes here */
+static int clv_sdio_setup(struct sdhci_pci_data *data)
+{
+	struct pci_dev *pdev = data->pdev;
+	/* Control card power through a regulator */
+	wlan_vmmc_supply.dev_name = dev_name(&pdev->dev);
+	vwlan.gpio = get_gpio_by_name("WLAN-enable");
+	if (vwlan.gpio < 0)
+		pr_err("%s: No WLAN-enable GPIO in SFI table\n",
+	       __func__);
+	pr_info("vwlan gpio %d\n", vwlan.gpio);
+	/* add a regulator to control wlan enable gpio */
+	if (platform_device_register(&vwlan_device))
+		pr_err("regulator register failed\n");
+	else
+		sdhci_pci_request_regulators();
+
+	return 0;
+}
+
+
 /* CLV platform data */
 static struct sdhci_pci_data clv_sdhci_pci_data[] = {
 	[EMMC0_INDEX] = {
@@ -148,20 +233,39 @@ static struct sdhci_pci_data clv_sdhci_pci_data[] = {
 			.cd_gpio = -EINVAL,
 			.quirks = 0,
 			.platform_quirks = 0,
-			.setup = 0,
+			.setup = clv_sdio_setup,
 			.cleanup = 0,
 	},
 };
 
+/* Board specific cleanup related to SD goes here */
+static void mrfl_sd_cleanup(struct sdhci_pci_data *data)
+{
+}
+
+
 /* Board specific cleanup related to SDIO goes here */
 static void mrfl_sdio_cleanup(struct sdhci_pci_data *data)
 {
 }
 
-
 /* Board specific setup related to SDIO goes here */
 static int mrfl_sdio_setup(struct sdhci_pci_data *data)
 {
+	struct pci_dev *pdev = data->pdev;
+	/* Control card power through a regulator */
+	wlan_vmmc_supply.dev_name = dev_name(&pdev->dev);
+	vwlan.gpio = get_gpio_by_name("WLAN-enable");
+	if (vwlan.gpio < 0)
+		pr_err("%s: No WLAN-enable GPIO in SFI table\n",
+	       __func__);
+	pr_info("vwlan gpio %d\n", vwlan.gpio);
+	/* add a regulator to control wlan enable gpio */
+	if (platform_device_register(&vwlan_device))
+		pr_err("regulator register failed\n");
+	else
+		sdhci_pci_request_regulators();
+
 	return 0;
 }
 
@@ -210,10 +314,38 @@ static struct sdhci_pci_data mrfl_sdhci_pci_data[] = {
 	},
 };
 
-/* Board specific setup related to SDIO goes here */
 
+/* Board specific setup related to SDIO goes here */
 static int byt_sdio_setup(struct sdhci_pci_data *data)
 {
+	struct pci_dev *pdev = data->pdev;
+#ifdef CONFIG_ACPI
+	acpi_handle handle;
+	acpi_status status;
+#endif
+
+	/* Control card power through a regulator */
+	wlan_vmmc_supply.dev_name = dev_name(&pdev->dev);
+
+#ifdef CONFIG_ACPI
+	status = acpi_get_handle(NULL, "\\_SB.SDHB", &handle);
+	if (ACPI_FAILURE(status))
+		pr_err("wlan: cannot get SDHB acpi handle");
+	ACPI_HANDLE_SET(&pdev->dev, handle);
+	vwlan.gpio = acpi_get_gpio_by_index(&pdev->dev, 0, NULL);
+#endif
+	if (vwlan.gpio < 0)
+		pr_err("%s: No wlan-enable GPIO in SDHB ACPI block\n",
+		       __func__);
+
+	pr_info("vwlan gpio %d\n", vwlan.gpio);
+
+	/* add a regulator to control wlan enable gpio */
+	if (platform_device_register(&vwlan_device))
+		pr_err("regulator register failed\n");
+	else
+		sdhci_pci_request_regulators();
+
 	return 0;
 }
 
diff --git a/arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.c b/arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.c
deleted file mode 100644
index 5a352d745d86..000000000000
--- a/arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.c
+++ /dev/null
@@ -1,215 +0,0 @@
-/*
- * platform_bcm43xx.c: bcm43xx platform data initilization file
- *
- * (C) Copyright 2011 Intel Corporation
- * Author:
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; version 2
- * of the License.
- */
-
-#include <linux/gpio.h>
-#include <linux/lnw_gpio.h>
-#include <linux/regulator/machine.h>
-#include <linux/regulator/fixed.h>
-#include <asm/intel-mid.h>
-#include <linux/wlan_plat.h>
-#include <linux/interrupt.h>
-#include "platform_bcm43xx.h"
-#include <linux/mmc/sdhci.h>
-#include <linux/delay.h>
-#include <linux/pm_runtime.h>
-
-#include "pci/platform_sdhci_pci.h"
-
-/* Delay copied from broadcom reference design */
-#define DELAY_ONOFF 250
-
-static int gpio_enable;
-static void (*g_virtual_cd)(void *dev_id, int card_present);
-void *g_host;
-static struct platform_device bcm43xx_vwlan_device;
-static struct fixed_voltage_config bcm43xx_vwlan;
-static char nvram_id[30];
-
-static int bcmdhd_set_power(int on)
-{
-	struct sdhci_host *host = (struct sdhci_host *)g_host;
-
-	if (on)
-		mmc_power_restore_host(host->mmc);
-	else
-		mmc_power_save_host(host->mmc);
-
-	return 0;
-}
-
-static int bcmdhd_set_card_detect(int detect)
-{
-	if (!g_virtual_cd)
-		return -1;
-
-	if (g_host)
-		g_virtual_cd(g_host, detect);
-
-	return 0;
-}
-
-static struct wifi_platform_data bcmdhd_data = {
-	.set_power = bcmdhd_set_power,
-	.set_carddetect = bcmdhd_set_card_detect,
-	.nvram_id = (char *)&nvram_id,
-};
-
-static struct resource bcmdhd_res[] = {
-	{
-	.name = "bcmdhd_wlan_irq",
-	.start = 1,
-	.end = 1,
-	.flags = IORESOURCE_IRQ | IRQF_TRIGGER_FALLING ,
-	},
-	{
-	.name = "bcmdhd_wlan_en",
-	.start = 1,
-	.end = 1,
-	.flags = IORESOURCE_IRQ ,
-	}
-
-};
-
-static struct platform_device bcmdhd_device = {
-	.name = "bcmdhd_wlan",
-	.dev = {
-		.platform_data = &bcmdhd_data,
-		},
-	.num_resources = ARRAY_SIZE(bcmdhd_res),
-	.resource = bcmdhd_res,
-};
-
-static struct regulator_consumer_supply bcm43xx_vmmc3_supply = {
-	.supply		= "vmmc",
-};
-
-static struct regulator_init_data bcm43xx_vmmc3 = {
-	.constraints = {
-		.valid_ops_mask	= REGULATOR_CHANGE_STATUS,
-	},
-	.num_consumer_supplies	= 1,
-	.consumer_supplies = &bcm43xx_vmmc3_supply,
-};
-
-static struct fixed_voltage_config bcm43xx_vwlan = {
-	.supply_name		= "vbcm43xx",
-	.microvolts		= 1800000,
-	.gpio			= -EINVAL,
-	.startup_delay		= 1000 * DELAY_ONOFF,
-	.enable_high		= 1,
-	.enabled_at_boot	= 0,
-	.init_data		= &bcm43xx_vmmc3,
-};
-
-static void bcm43xx_vwlan_device_release(struct device *dev) {}
-
-static struct platform_device bcm43xx_vwlan_device = {
-	.name		= "reg-fixed-voltage",
-	.id		= PLATFORM_DEVID_AUTO,
-	.dev = {
-		.platform_data	= &bcm43xx_vwlan,
-		.release = bcm43xx_vwlan_device_release,
-	},
-};
-
-static void generate_nvram_id(void)
-{
-	if (INTEL_MID_BOARD(2, PHONE, CLVTP, VB, PRO))
-		strncpy(nvram_id, "victoriabay_prx", sizeof(nvram_id));
-	else if (INTEL_MID_BOARD(2, PHONE, MRFL, BB, PRO))
-		strncpy(nvram_id, "bodegabay_pr1", sizeof(nvram_id));
-	else
-		strncpy(nvram_id, "aob", sizeof(nvram_id));
-
-	nvram_id[sizeof(nvram_id) - 1] = '\0';
-}
-
-void bcmdhd_register_embedded_control(void *dev_id,
-			void (*virtual_cd)(void *dev_id, int card_present))
-{
-	struct sdhci_host *host = (struct sdhci_host *)dev_id;
-	int err;
-
-	g_virtual_cd = virtual_cd;
-	g_host = dev_id;
-
-	bcm43xx_vmmc3_supply.dev_name = kstrdup(dev_name(mmc_dev(host->mmc)),
-						GFP_KERNEL);
-
-	bcm43xx_vwlan.gpio = gpio_enable;
-
-	/* add a fake sdhci controler regulator routed to bcm enable gpio */
-	err = platform_device_register(&bcm43xx_vwlan_device);
-	if (err < 0)
-		pr_err("%s: failed to register platform device\n", __func__);
-
-	sdhci_pci_request_regulators();
-}
-
-void __init wifi_platform_data_init_sfi(void)
-{
-	int wifi_irq_gpio;
-	int err;
-
-	pr_debug("%s\n", __func__);
-
-	wifi_irq_gpio = get_gpio_by_name(BCM43XX_SFI_GPIO_IRQ_NAME);
-	if (wifi_irq_gpio < 0) {
-		pr_err("%s: Unable to find WLAN-interrupt in the SFI table\n",
-				__func__);
-		return;
-	}
-
-	bcmdhd_res[0].start = wifi_irq_gpio;
-	bcmdhd_res[0].end = bcmdhd_res[0].start;
-
-	gpio_enable = get_gpio_by_name(BCM43XX_SFI_GPIO_ENABLE_NAME);
-	if (gpio_enable < 0) {
-		pr_err("%s: Unable to find WLAN-enable GPIO in the SFI table\n",
-		       __func__);
-		return;
-	}
-
-
-	bcmdhd_res[1].start = gpio_enable;
-	bcmdhd_res[1].end = bcmdhd_res[1].start;
-
-	err = platform_device_register(&bcmdhd_device);
-	if (err < 0)
-		pr_err("platform_device_register failed for bcmdhd_device\n");
-}
-
-void __init *bcm43xx_platform_data(void *info)
-{
-	struct sd_board_info *sd_info = NULL;
-	unsigned int sdhci_quirk = SDHCI_QUIRK2_ADVERTISE_2V0_FORCE_1V8
-			| SDHCI_QUIRK2_ENABLE_MMC_PM_IGNORE_PM_NOTIFY;
-
-	pr_debug("%s\n", __func__);
-
-	sdhci_pdata_set_quirks(sdhci_quirk);
-	sdhci_pdata_set_embedded_control(&bcmdhd_register_embedded_control);
-
-	generate_nvram_id();
-
-#ifndef CONFIG_ACPI
-	sd_info = kmemdup(info, sizeof(*sd_info), GFP_KERNEL);
-
-	if (!sd_info) {
-		pr_err("%s: kmemdup error\n", __func__);
-		return NULL;
-	}
-	wifi_platform_data_init_sfi();
-#endif
-
-	return &bcmdhd_device;
-}
diff --git a/arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.h b/arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.h
deleted file mode 100644
index d98262c929e6..000000000000
--- a/arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.h
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * platform_bcm43xx.h: bcm43xx platform data header file
- *
- * (C) Copyright 2011 Intel Corporation
- * Author:
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; version 2
- * of the License.
- */
-#ifndef _PLATFORM_BCM43XX_H_
-#define _PLATFORM_BCM43XX_H_
-
-#define BCM43XX_SFI_GPIO_IRQ_NAME "WLAN-interrupt"
-#define BCM43XX_SFI_GPIO_ENABLE_NAME "WLAN-enable"
-#define ICDK_BOARD_REF_CLK 26000000
-#define NCDK_BOARD_REF_CLK 38400000
-
-extern void __init *bcm43xx_platform_data(void *info);
-#endif
diff --git a/arch/x86/platform/intel-mid/device_libs/platform_wifi.c b/arch/x86/platform/intel-mid/device_libs/platform_wifi.c
new file mode 100644
index 000000000000..c7e674737ae6
--- /dev/null
+++ b/arch/x86/platform/intel-mid/device_libs/platform_wifi.c
@@ -0,0 +1,86 @@
+/*
+ * platform_bcm43xx.c: bcm43xx platform data initilization file
+ *
+ * (C) Copyright 2011 Intel Corporation
+ * Author:
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; version 2
+ * of the License.
+ */
+
+#include <linux/gpio.h>
+#include <linux/lnw_gpio.h>
+#include <asm/intel-mid.h>
+#include <linux/wlan_plat.h>
+#include <linux/interrupt.h>
+#include <linux/mmc/sdhci.h>
+#include <linux/delay.h>
+#include <linux/platform_device.h>
+#include "pci/platform_sdhci_pci.h"
+#include "platform_wifi.h"
+
+static struct resource wifi_res[] = {
+	{
+	.name = "wlan_irq",
+	.start = 1,
+	.end = 1,
+	.flags = IORESOURCE_IRQ | IRQF_TRIGGER_FALLING ,
+	},
+};
+
+static struct platform_device wifi_device = {
+	.name = "wlan",
+	.dev = {
+		.platform_data = NULL,
+		},
+	.num_resources = ARRAY_SIZE(wifi_res),
+	.resource = wifi_res,
+};
+
+void __init wifi_platform_data_init_sfi(void)
+{
+	int err;
+	int wifi_irq_gpio = -1;
+
+	pr_err("wifi_platform_data_init_sfi\n");
+
+	/*Get GPIO numbers from the SFI table*/
+	wifi_irq_gpio = get_gpio_by_name(WIFI_SFI_GPIO_IRQ_NAME);
+	if (wifi_irq_gpio < 0) {
+		pr_err("%s: Unable to find" WIFI_SFI_GPIO_IRQ_NAME
+		       "WLAN-interrupt GPIO in the SFI table\n",
+		       __func__);
+		return;
+	}
+
+	wifi_res[0].start = wifi_res[0].end = wifi_irq_gpio;
+
+	/* For SFI compliant platforms, we need to manually register
+	a platform device */
+
+	err = platform_device_register(&wifi_device);
+	if (err < 0)
+		pr_err("platform_device_register failed for wifi_device\n");
+}
+
+
+/* Called from board.c */
+void __init *wifi_platform_data(void *info)
+{
+	unsigned int sdhci_quirk = SDHCI_QUIRK2_ADVERTISE_2V0_FORCE_1V8
+		| SDHCI_QUIRK2_ENABLE_MMC_PM_IGNORE_PM_NOTIFY;
+
+	pr_err("Using WiFi platform data\n");
+
+	/* Set vendor specific SDIO quirks */
+	sdhci_pdata_set_quirks(sdhci_quirk);
+
+#ifndef CONFIG_ACPI
+	/* We are SFI here, register platform device */
+	wifi_platform_data_init_sfi();
+#endif
+
+	return &wifi_device;
+}
diff --git a/arch/x86/platform/intel-mid/device_libs/platform_wifi.h b/arch/x86/platform/intel-mid/device_libs/platform_wifi.h
new file mode 100644
index 000000000000..7082e08fb745
--- /dev/null
+++ b/arch/x86/platform/intel-mid/device_libs/platform_wifi.h
@@ -0,0 +1,20 @@
+/*
+ * platform_wifi.h: WiFi platform data header file
+ *
+ * (C) Copyright 2011 Intel Corporation
+ * Author:
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; version 2
+ * of the License.
+ */
+#ifndef _PLATFORM_WIFI_H_
+#define _PLATFORM_WIFI_H_
+
+#define WIFI_SFI_GPIO_IRQ_NAME "WLAN-interrupt"
+#define WIFI_SFI_GPIO_ENABLE_NAME "WLAN-enable"
+
+extern void __init *wifi_platform_data(void *info);
+
+#endif
diff --git a/drivers/acpi/acpi_platform.c b/drivers/acpi/acpi_platform.c
index fafec5ddf17f..e3552558c27b 100644
--- a/drivers/acpi/acpi_platform.c
+++ b/drivers/acpi/acpi_platform.c
@@ -29,7 +29,8 @@ ACPI_MODULE_NAME("platform");
 static const struct acpi_device_id acpi_platform_device_ids[] = {
 
 	{ "PNP0D40" },
-
+	{ "BCM43241" },
+	{ "BCM2E1A" },
 	{ }
 };
 
diff --git a/drivers/mmc/host/sdhci-pci.c b/drivers/mmc/host/sdhci-pci.c
index 42a7898125cf..1d940dd82087 100644
--- a/drivers/mmc/host/sdhci-pci.c
+++ b/drivers/mmc/host/sdhci-pci.c
@@ -1376,6 +1376,7 @@ static struct sdhci_pci_slot *sdhci_pci_probe_slot(
 		slot->data = sdhci_pci_get_data(pdev, slotno);
 
 	if (slot->data) {
+		slot->data->pdev = pdev;
 		if (slot->data->setup) {
 			ret = slot->data->setup(slot->data);
 			if (ret) {
diff --git a/drivers/net/wireless/Kconfig b/drivers/net/wireless/Kconfig
index f8f0156dff4e..7c6dc04243a2 100644
--- a/drivers/net/wireless/Kconfig
+++ b/drivers/net/wireless/Kconfig
@@ -264,6 +264,17 @@ config MWL8K
 	  To compile this driver as a module, choose M here: the module
 	  will be called mwl8k.  If unsure, say N.
 
+config WIFI_CONTROL_FUNC
+	bool "Enable WiFi control function abstraction"
+	help
+	  Enables Power/Reset/Carddetect function abstraction
+
+config WIFI_PLATFORM_DATA
+	bool
+	default y
+	---help---
+	 Enables platform_wifi
+
 source "drivers/net/wireless/ath/Kconfig"
 source "drivers/net/wireless/b43/Kconfig"
 source "drivers/net/wireless/b43legacy/Kconfig"
-- 
2.37.3

