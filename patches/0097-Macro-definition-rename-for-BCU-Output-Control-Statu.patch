From da2acb478cd8598d27712ebf7921eeedcafd4005 Mon Sep 17 00:00:00 2001
From: Albin B <albin.bala.krishnan@intel.com>
Date: Sun, 20 Oct 2013 22:27:30 +0530
Subject: [PATCH 097/429] Macro definition/rename for BCU Output Control Status
 register bits

Issue Description:
The macros for the BCU Output Control Status Register bit names are different
than the name provided in the basin cove PMIC spec. Also interrupt re-enabling
delay is used for VWARN2 interrupt since the VWARN1 and VWARN2 threshold values
are swapped. So interrupt re-enabling delay macro has to be renamed.

Solution:
To match register bits name with the basin cove PMIC spec, the macro of BCU
Output Control Status Register bits are renamed. Also renamed the interrupt
re-enable macro for VWARN2 since VWARN1 and VWARN2 threshold values are swapped.

Category: device enablement
Domain: EM.BCU-MERR
Origin: internal
Upstream-Candidate: no, proprietary

Signed-off-by: Albin B <albin.bala.krishnan@intel.com>
---
 arch/x86/include/asm/intel_basincove_ocd.h | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/arch/x86/include/asm/intel_basincove_ocd.h b/arch/x86/include/asm/intel_basincove_ocd.h
index ace10c683365..0186bf7ed659 100644
--- a/arch/x86/include/asm/intel_basincove_ocd.h
+++ b/arch/x86/include/asm/intel_basincove_ocd.h
@@ -14,6 +14,9 @@
 #define B6	(1 << 6)
 #define B7	(1 << 7)
 
+/* 30 seconds delay macro for VWARN1 interrupt Unmask (enable) */
+#define VWARN2_INTR_EN_DELAY	(30 * HZ)
+
 /* IRQ registers */
 #define BCUIRQ                  0x05
 #define IRQLVL1                 0x01
@@ -73,9 +76,13 @@
 #define SVCRIT                  (1<<2)
 
 /* S_BCUCTRL register status bits */
-#define SBCUCTRL_CAMTORCH       (1<<3)
-#define SBCUCTRL_CAMFLDIS       (1<<2)
-#define SBCUCTRL_BCUDISW2       (1<<1)
+#define S_CAMFLTORCH		B3
+#define S_CAMFLDIS		B2
+#define S_BCUDISW2		B1
+
+#define S_BCUDISW2_MASK		B1
+#define S_CAMFLDIS_MASK		B2
+#define S_CAMFLTORCH_MASK	B3
 
 /* check whether bit is sticky or not by checking 5th bit */
 #define IS_STICKY(data)         (!!(data & 0x10))
-- 
2.37.3

