From d46b1c87ca18149e0ea562341fc6c9a4b059b6a2 Mon Sep 17 00:00:00 2001
From: Aymen Zayet <aymen.zayet@intel.com>
Date: Fri, 19 Jul 2013 20:55:14 +0200
Subject: [PATCH 053/429] bcm: add bcm43xx platform data needed by wifi unified
 driver bcm43xx.

Signed-off-by: Aymen Zayet <aymen.zayet@intel.com>
---
 .../platform/intel-mid/device_libs/Makefile   |   6 +
 .../device_libs/pci/platform_sdhci_pci.h      |   3 +
 .../intel-mid/device_libs/platform_bcm43xx.c  | 215 ++++++++++++++++++
 .../intel-mid/device_libs/platform_bcm43xx.h  |  21 ++
 drivers/net/wireless/brcm80211/Kconfig        |   6 +
 include/linux/wlan_plat.h                     |  28 +++
 6 files changed, 279 insertions(+)
 create mode 100644 arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.c
 create mode 100644 arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.h
 create mode 100644 include/linux/wlan_plat.h

diff --git a/arch/x86/platform/intel-mid/device_libs/Makefile b/arch/x86/platform/intel-mid/device_libs/Makefile
index d819962ebc09..4af0a6b2882a 100644
--- a/arch/x86/platform/intel-mid/device_libs/Makefile
+++ b/arch/x86/platform/intel-mid/device_libs/Makefile
@@ -40,3 +40,9 @@ obj-$(subst m,y,$(CONFIG_BATTERY_MAX17042)) += platform_max17042.o
 else
 obj-$(subst m,y,$(CONFIG_BATTERY_MAX17050)) += platform_max17042.o
 endif
+# Panel Control Device
+obj-$(subst m,y,$(CONFIG_DRM_MRFLD)) += platform_panel.o
+# GPS
+obj-$(subst m,y,$(CONFIG_INTEL_MID_GPS)) += platform_gps.o
+# WIFI devices
+obj-$(subst m,y,$(CONFIG_BCM43XX_PLATFORM_DATA)) += platform_bcm43xx.o
diff --git a/arch/x86/platform/intel-mid/device_libs/pci/platform_sdhci_pci.h b/arch/x86/platform/intel-mid/device_libs/pci/platform_sdhci_pci.h
index e9c98f340eda..6901c8c97376 100644
--- a/arch/x86/platform/intel-mid/device_libs/pci/platform_sdhci_pci.h
+++ b/arch/x86/platform/intel-mid/device_libs/pci/platform_sdhci_pci.h
@@ -18,5 +18,8 @@
 #define SDIO_INDEX	3
 
 int sdhci_pdata_set_quirks(unsigned int quirks);
+int sdhci_pdata_set_embedded_control(void (*fnp)
+			(void *dev_id, void (*virtual_cd)
+			(void *dev_id, int card_present)));
 #endif
 
diff --git a/arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.c b/arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.c
new file mode 100644
index 000000000000..5a352d745d86
--- /dev/null
+++ b/arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.c
@@ -0,0 +1,215 @@
+/*
+ * platform_bcm43xx.c: bcm43xx platform data initilization file
+ *
+ * (C) Copyright 2011 Intel Corporation
+ * Author:
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; version 2
+ * of the License.
+ */
+
+#include <linux/gpio.h>
+#include <linux/lnw_gpio.h>
+#include <linux/regulator/machine.h>
+#include <linux/regulator/fixed.h>
+#include <asm/intel-mid.h>
+#include <linux/wlan_plat.h>
+#include <linux/interrupt.h>
+#include "platform_bcm43xx.h"
+#include <linux/mmc/sdhci.h>
+#include <linux/delay.h>
+#include <linux/pm_runtime.h>
+
+#include "pci/platform_sdhci_pci.h"
+
+/* Delay copied from broadcom reference design */
+#define DELAY_ONOFF 250
+
+static int gpio_enable;
+static void (*g_virtual_cd)(void *dev_id, int card_present);
+void *g_host;
+static struct platform_device bcm43xx_vwlan_device;
+static struct fixed_voltage_config bcm43xx_vwlan;
+static char nvram_id[30];
+
+static int bcmdhd_set_power(int on)
+{
+	struct sdhci_host *host = (struct sdhci_host *)g_host;
+
+	if (on)
+		mmc_power_restore_host(host->mmc);
+	else
+		mmc_power_save_host(host->mmc);
+
+	return 0;
+}
+
+static int bcmdhd_set_card_detect(int detect)
+{
+	if (!g_virtual_cd)
+		return -1;
+
+	if (g_host)
+		g_virtual_cd(g_host, detect);
+
+	return 0;
+}
+
+static struct wifi_platform_data bcmdhd_data = {
+	.set_power = bcmdhd_set_power,
+	.set_carddetect = bcmdhd_set_card_detect,
+	.nvram_id = (char *)&nvram_id,
+};
+
+static struct resource bcmdhd_res[] = {
+	{
+	.name = "bcmdhd_wlan_irq",
+	.start = 1,
+	.end = 1,
+	.flags = IORESOURCE_IRQ | IRQF_TRIGGER_FALLING ,
+	},
+	{
+	.name = "bcmdhd_wlan_en",
+	.start = 1,
+	.end = 1,
+	.flags = IORESOURCE_IRQ ,
+	}
+
+};
+
+static struct platform_device bcmdhd_device = {
+	.name = "bcmdhd_wlan",
+	.dev = {
+		.platform_data = &bcmdhd_data,
+		},
+	.num_resources = ARRAY_SIZE(bcmdhd_res),
+	.resource = bcmdhd_res,
+};
+
+static struct regulator_consumer_supply bcm43xx_vmmc3_supply = {
+	.supply		= "vmmc",
+};
+
+static struct regulator_init_data bcm43xx_vmmc3 = {
+	.constraints = {
+		.valid_ops_mask	= REGULATOR_CHANGE_STATUS,
+	},
+	.num_consumer_supplies	= 1,
+	.consumer_supplies = &bcm43xx_vmmc3_supply,
+};
+
+static struct fixed_voltage_config bcm43xx_vwlan = {
+	.supply_name		= "vbcm43xx",
+	.microvolts		= 1800000,
+	.gpio			= -EINVAL,
+	.startup_delay		= 1000 * DELAY_ONOFF,
+	.enable_high		= 1,
+	.enabled_at_boot	= 0,
+	.init_data		= &bcm43xx_vmmc3,
+};
+
+static void bcm43xx_vwlan_device_release(struct device *dev) {}
+
+static struct platform_device bcm43xx_vwlan_device = {
+	.name		= "reg-fixed-voltage",
+	.id		= PLATFORM_DEVID_AUTO,
+	.dev = {
+		.platform_data	= &bcm43xx_vwlan,
+		.release = bcm43xx_vwlan_device_release,
+	},
+};
+
+static void generate_nvram_id(void)
+{
+	if (INTEL_MID_BOARD(2, PHONE, CLVTP, VB, PRO))
+		strncpy(nvram_id, "victoriabay_prx", sizeof(nvram_id));
+	else if (INTEL_MID_BOARD(2, PHONE, MRFL, BB, PRO))
+		strncpy(nvram_id, "bodegabay_pr1", sizeof(nvram_id));
+	else
+		strncpy(nvram_id, "aob", sizeof(nvram_id));
+
+	nvram_id[sizeof(nvram_id) - 1] = '\0';
+}
+
+void bcmdhd_register_embedded_control(void *dev_id,
+			void (*virtual_cd)(void *dev_id, int card_present))
+{
+	struct sdhci_host *host = (struct sdhci_host *)dev_id;
+	int err;
+
+	g_virtual_cd = virtual_cd;
+	g_host = dev_id;
+
+	bcm43xx_vmmc3_supply.dev_name = kstrdup(dev_name(mmc_dev(host->mmc)),
+						GFP_KERNEL);
+
+	bcm43xx_vwlan.gpio = gpio_enable;
+
+	/* add a fake sdhci controler regulator routed to bcm enable gpio */
+	err = platform_device_register(&bcm43xx_vwlan_device);
+	if (err < 0)
+		pr_err("%s: failed to register platform device\n", __func__);
+
+	sdhci_pci_request_regulators();
+}
+
+void __init wifi_platform_data_init_sfi(void)
+{
+	int wifi_irq_gpio;
+	int err;
+
+	pr_debug("%s\n", __func__);
+
+	wifi_irq_gpio = get_gpio_by_name(BCM43XX_SFI_GPIO_IRQ_NAME);
+	if (wifi_irq_gpio < 0) {
+		pr_err("%s: Unable to find WLAN-interrupt in the SFI table\n",
+				__func__);
+		return;
+	}
+
+	bcmdhd_res[0].start = wifi_irq_gpio;
+	bcmdhd_res[0].end = bcmdhd_res[0].start;
+
+	gpio_enable = get_gpio_by_name(BCM43XX_SFI_GPIO_ENABLE_NAME);
+	if (gpio_enable < 0) {
+		pr_err("%s: Unable to find WLAN-enable GPIO in the SFI table\n",
+		       __func__);
+		return;
+	}
+
+
+	bcmdhd_res[1].start = gpio_enable;
+	bcmdhd_res[1].end = bcmdhd_res[1].start;
+
+	err = platform_device_register(&bcmdhd_device);
+	if (err < 0)
+		pr_err("platform_device_register failed for bcmdhd_device\n");
+}
+
+void __init *bcm43xx_platform_data(void *info)
+{
+	struct sd_board_info *sd_info = NULL;
+	unsigned int sdhci_quirk = SDHCI_QUIRK2_ADVERTISE_2V0_FORCE_1V8
+			| SDHCI_QUIRK2_ENABLE_MMC_PM_IGNORE_PM_NOTIFY;
+
+	pr_debug("%s\n", __func__);
+
+	sdhci_pdata_set_quirks(sdhci_quirk);
+	sdhci_pdata_set_embedded_control(&bcmdhd_register_embedded_control);
+
+	generate_nvram_id();
+
+#ifndef CONFIG_ACPI
+	sd_info = kmemdup(info, sizeof(*sd_info), GFP_KERNEL);
+
+	if (!sd_info) {
+		pr_err("%s: kmemdup error\n", __func__);
+		return NULL;
+	}
+	wifi_platform_data_init_sfi();
+#endif
+
+	return &bcmdhd_device;
+}
diff --git a/arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.h b/arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.h
new file mode 100644
index 000000000000..d98262c929e6
--- /dev/null
+++ b/arch/x86/platform/intel-mid/device_libs/platform_bcm43xx.h
@@ -0,0 +1,21 @@
+/*
+ * platform_bcm43xx.h: bcm43xx platform data header file
+ *
+ * (C) Copyright 2011 Intel Corporation
+ * Author:
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; version 2
+ * of the License.
+ */
+#ifndef _PLATFORM_BCM43XX_H_
+#define _PLATFORM_BCM43XX_H_
+
+#define BCM43XX_SFI_GPIO_IRQ_NAME "WLAN-interrupt"
+#define BCM43XX_SFI_GPIO_ENABLE_NAME "WLAN-enable"
+#define ICDK_BOARD_REF_CLK 26000000
+#define NCDK_BOARD_REF_CLK 38400000
+
+extern void __init *bcm43xx_platform_data(void *info);
+#endif
diff --git a/drivers/net/wireless/brcm80211/Kconfig b/drivers/net/wireless/brcm80211/Kconfig
index fc8a0fa6d3b2..ec0639da5b38 100644
--- a/drivers/net/wireless/brcm80211/Kconfig
+++ b/drivers/net/wireless/brcm80211/Kconfig
@@ -63,3 +63,9 @@ config BRCMDBG
 	depends on BRCMSMAC || BRCMFMAC
 	---help---
 	  Selecting this enables additional code for debug purposes.
+
+config BCM43XX_PLATFORM_DATA
+	bool
+	default y
+	---help---
+	 Enables platform_bcm43xx
diff --git a/include/linux/wlan_plat.h b/include/linux/wlan_plat.h
new file mode 100644
index 000000000000..0792a536c1ca
--- /dev/null
+++ b/include/linux/wlan_plat.h
@@ -0,0 +1,28 @@
+/* include/linux/wlan_plat.h
+ *
+ * Copyright (C) 2010 Google, Inc.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ */
+#ifndef _LINUX_WLAN_PLAT_H_
+#define _LINUX_WLAN_PLAT_H_
+
+struct wifi_platform_data {
+	int (*set_power)(int val);
+	int (*set_reset)(int val);
+	int (*set_carddetect)(int val);
+	void *(*mem_prealloc)(int section, unsigned long size);
+	int (*get_mac_addr)(unsigned char *buf);
+	void *(*get_country_code)(char *ccode);
+	char *nvram_id;
+};
+
+#endif
-- 
2.37.3

