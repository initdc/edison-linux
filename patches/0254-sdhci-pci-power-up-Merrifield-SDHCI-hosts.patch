From 6b35245b7b5dfbcb3302a70b136f4c91f872bb06 Mon Sep 17 00:00:00 2001
From: Dong Chuanxiao <chuanxiao.dong@intel.com>
Date: Fri, 16 Aug 2013 14:22:46 +0800
Subject: [PATCH 254/429] sdhci-pci: power up Merrifield SDHCI hosts

After enabling D0ix on sdio0/1/emmc0 and rebooting the platform

The issue is, emmc0 is in d0i3 during reboot and there is a access
without bringing the device to d0i0.

Fixed this by implementing shutdown handler and disabling runtime_pm
during shutdown, this is similar to other sdhci driver implementations.

However this solution is a workaround since during shutdown emmc driver
is not expecting access, and since there is access need to find who
is accessing and fix that issue.

Till that time we have this solution to unblock S0ix enabling.

This patch also includes:
 bd46f3f8 [REVERTME] sdhci-pci: implement shutdown callback

Signed-off-by: Chuanxiao Dong <chuanxiao.dong@intel.com>
---
 drivers/mmc/host/sdhci-pci.c | 19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

diff --git a/drivers/mmc/host/sdhci-pci.c b/drivers/mmc/host/sdhci-pci.c
index f0c374f3bd9d..045d92322ced 100644
--- a/drivers/mmc/host/sdhci-pci.c
+++ b/drivers/mmc/host/sdhci-pci.c
@@ -2318,15 +2318,26 @@ static void sdhci_pci_shutdown(struct pci_dev *pdev)
 
 	chip = pci_get_drvdata(pdev);
 
-	if (chip && chip->pdev &&
-		chip->pdev->device == PCI_DEVICE_ID_INTEL_CLV_SDIO0) {
+	if (!chip || !chip->pdev)
+		return;
+
+	switch (chip->pdev->device) {
+	case PCI_DEVICE_ID_INTEL_CLV_SDIO0:
 		for (i = 0; i < chip->num_slots; i++) {
 			if (chip->slots[i]->host->flags & SDHCI_POWER_CTRL_DEV)
 				ctp_sd_card_power_save(chip->slots[i]);
 		}
+		break;
+	case PCI_DEVICE_ID_INTEL_MRFL_MMC:
+		if (chip->allow_runtime_pm) {
+			pm_runtime_get_sync(&pdev->dev);
+			pm_runtime_disable(&pdev->dev);
+			pm_runtime_put_noidle(&pdev->dev);
+		}
+		break;
+	default:
+		break;
 	}
-
-	return;
 }
 
 static struct pci_driver sdhci_driver = {
-- 
2.37.3

